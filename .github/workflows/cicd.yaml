name: CI/CD

on: [ pull_request, push ]

jobs:
  check:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"
          cache-dependency-path: yarn.lock
      - uses: dtolnay/rust-toolchain@stable
      - uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: |
          rustup toolchain install nightly
          cargo install grcov && cargo install cargo-sort
          yarn && yarn lint && yarn test:coverage
        name: Test and coverage
      - name: Push coverage to Codecov
        if: matrix.platform == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: target/debug/coverage/lcov.info,coverage/coverage-final.json
      - name: Push coverage to Codacy
        if: matrix.platform == 'ubuntu-latest'
        uses: codacy/codacy-coverage-reporter-action@v1
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: target/debug/coverage/lcov.info,coverage/coverage-final.json
      - name: SonarCloud Scan
        if: matrix.platform == 'ubuntu-latest'
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - run: yarn build
        name: Build release
