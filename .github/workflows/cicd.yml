name: CI/CD

on: [pull_request, push]

jobs:
  check:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository
      - uses: actions/setup-node@v3
        name: Setup Node
        with:
          node-version: 18
          cache: "yarn"
          cache-dependency-path: yarn.lock
      - uses: actions-rs/toolchain@v1
        name: Setup Rust
        with:
          toolchain: stable
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - run: |
          cargo install grcov
          cargo install cargo-sort
          yarn && yarn build:app-desktop:vue
          yarn lint && yarn test:coverage
        name: Test and coverage
      - uses: codecov/codecov-action@v3
        if: matrix.platform == 'ubuntu-latest'
        with:
          files: target/debug/coverage/lcov.info
          flags: unittests,backend
        name: Push coverage to Codecov
      - name: Push coverage to Codacy
        if: matrix.platform == 'ubuntu-latest'
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: target/debug/coverage/lcov.info
      - name: SonarCloud Scan
        if: matrix.platform == 'ubuntu-latest'
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - run: yarn build
        name: Build release
